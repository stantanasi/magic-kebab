{"version":3,"sources":["components/footer/footer.styled.ts","components/footer/footer.tsx","components/header/header.styled.ts","components/header/header.tsx","components/common/container.styled.ts","pages/kebab/kebab.styled.ts","components/common/button.tsx","components/common/card.tsx","data/breads.data.ts","data/fillings.data.ts","data/meats.data.ts","data/sauces.data.ts","data/kebabs.data.ts","pages/kebab/kebab.tsx","pages/config-kebab/selector/selector.styled.ts","pages/config-kebab/selector/breads-selector.tsx","pages/config-kebab/selector/fillings-selector.tsx","pages/config-kebab/selector/meats-selector.tsx","pages/config-kebab/selector/sauces-selector.tsx","pages/config-kebab/config-kebab.tsx","pages/home/home.styled.ts","pages/home/home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FooterWrapper","styled","footer","Footer","props","HeaderWrapper","header","Logo","img","Header","href","process","src","ContainerWrapper","div","ElementWrapper","SummaryElementWrapper","Button","ButtonWrapper","onClick","name","button","Card","isChecked","isSelected","onSelect","style","display","flexDirection","Array","isArray","image","map","index","alt","title","join","breads","slug","fillings","meats","sauces","kebabs","price","bread","find","meat","filter","filling","sauce","Kebab","history","useHistory","kebab","match","params","console","log","onOrder","push","SelectorWrapper","BreadsSelector","useState","selectedBread","setSelectedBread","onProceed","FillingsSelector","selectedFillings","setSelectedFillings","includes","concat","f","MeatsSelector","selectedMeat","setSelectedMeat","SaucesSelector","selectedSauces","setSelectedSauces","length","s","ConfigKebab","setKebab","exact","path","url","component","PopularKebabs","Cart","CartItemList","CartItem","Home","cart","reduce","acc","cur","quantity","item","App","setCart","handleOnOrder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b69a77.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FooterWrapper = styled.footer`\n  margin-top: 5rem;\n  /* background: linear-gradient(180deg, rgba(77, 3, 2, 0) 0%, #4D0302 100%); */\n`;","import React from 'react'\nimport * as Styled from './footer.styled';\n\ninterface Props {\n  \n}\n\nconst Footer = (props: Props) => {\n  return (\n    <Styled.FooterWrapper>\n      <h1>Magic Kebab</h1>\n    </Styled.FooterWrapper>\n  )\n}\n\nexport default Footer\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  padding: 32px 0 3rem;\n`;\n\nexport const Logo = styled.img``;\n","import React from 'react'\nimport * as Styled from './header.styled'\n\nconst Header = (props: {}) => {\n  return (\n    <Styled.HeaderWrapper>\n      <a href={`${process.env.PUBLIC_URL}`}>\n        <Styled.Logo src={`${process.env.PUBLIC_URL}/assets/logo.png`} />\n      </a>\n    </Styled.HeaderWrapper>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components';\n\nexport const ContainerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  gap: 2rem;\n`;\n\nexport const ElementWrapper = styled.div`\n  display: flex;\n  gap: 2rem;\n  flex-wrap: wrap;\n  justify-content: center;\n`;","import styled from 'styled-components';\nimport { ElementWrapper } from '../../components/common/container.styled';\n\nexport const SummaryElementWrapper = styled(ElementWrapper)`\n  align-items: center;\n  gap: 1rem;\n`;","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {\n  name: string;\n  onClick: () => void;\n}\n\nconst Button = (props: Props) => {\n  return (\n    <ButtonWrapper onClick={props.onClick}>\n      {props.name}\n    </ButtonWrapper>\n  )\n}\n\nexport default Button\n\nconst ButtonWrapper = styled.button`\n  background: #4D0302;\n  border: 1px solid #4D0302;\n  border-radius: 8px;\n  color: var(--main-bg-color);\n  padding: 1rem 2rem;\n  cursor: pointer;\n`;\n","import React from 'react'\nimport styled from 'styled-components';\n\ninterface Props {\n  title: string | string[];\n  image: string | string[];\n  isSelected: boolean;\n  onSelect: (isSelected: boolean) => void;\n}\n\nconst Card = (props: Props) => {\n  return (\n    <ElementWrapper\n      isChecked={props.isSelected}\n      onClick={() => props.onSelect(!props.isSelected)}\n    >\n      <div>\n        <div style={{ display: 'flex', flexDirection: 'row'}}>\n          {Array.isArray(props.image)\n            ? props.image.map((image, index) => (\n              <img key={index} src={image} alt={Array.isArray(props.title) ? props.title[index] : props.title} />\n            ))\n            : <img src={props.image} alt={Array.isArray(props.title) ? props.title.join(' & ') : props.title} />}\n        </div>\n        <p>{Array.isArray(props.title) ? props.title.join(' & ') : props.title}</p>\n      </div>\n      {props.isSelected && <img src={`${process.env.PUBLIC_URL}/assets/checked.png`} alt=\"Is checked\" />}\n    </ElementWrapper>\n  )\n}\n\nexport default Card\n\nconst ElementWrapper = styled.div<{ isChecked: boolean }>`\n  outline: ${props => props.isChecked ? '4px solid #4D0302' : '1px solid rgba(77, 3, 2, 0.24)'};\n  border-radius: 16px;\n  padding: 1rem;\n  display: grid;\n\n  > * {\n    grid-column: 1;\n    grid-row: 1;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n  }\n\n  > div img {\n    width: 120px;\n  }\n\n  > img {\n    margin-left: auto;\n  }\n`;\n","export interface Bread {\n  name: string;\n  slug: string;\n  image: string;\n}\n\nconst breads: Bread[] = [\n  {\n    name: 'Pain',\n    slug: 'pain',\n    image: `${process.env.PUBLIC_URL}/assets/breads/pain.png`,\n  },\n  {\n    name: 'Galette',\n    slug: 'galette',\n    image: `${process.env.PUBLIC_URL}/assets/breads/galette.png`,\n  },\n];\nexport default breads;","export interface Filling {\n  name: string;\n  slug: string;\n  image: string;\n}\n\nconst fillings: Filling[] = [\n  {\n    name: 'Salade',\n    slug: 'salade',\n    image: `${process.env.PUBLIC_URL}/assets/fillings/salade.png`,\n  },\n  {\n    name: 'Tomate',\n    slug: 'tomate',\n    image: `${process.env.PUBLIC_URL}/assets/fillings/tomate.png`,\n  },\n  {\n    name: 'Oignon',\n    slug: 'oignon',\n    image: `${process.env.PUBLIC_URL}/assets/fillings/oignon.png`,\n  },\n];\nexport default fillings;","export interface Meat {\n  name: string;\n  slug: string;\n  image: string;\n}\n\nconst meats: Meat[] = [\n  {\n    name: 'Viande',\n    slug: 'viande',\n    image: `${process.env.PUBLIC_URL}/assets/meats/viande.png`,\n  },\n  {\n    name: 'Tofu',\n    slug: 'tofu',\n    image: `${process.env.PUBLIC_URL}/assets/meats/tofu.png`,\n  },\n];\nexport default meats;","export interface Sauce {\n  name: string;\n  slug: string;\n  image: string;\n}\n\nconst sauces: Sauce[] = [\n  {\n    name: 'Blanche',\n    slug: 'blanche',\n    image: `${process.env.PUBLIC_URL}/assets/sauces/blanche.png`,\n  },\n  {\n    name: 'Harissa',\n    slug: 'harissa',\n    image: `${process.env.PUBLIC_URL}/assets/sauces/harissa.png`,\n  },\n  {\n    name: 'Andalouse',\n    slug: 'andalouse',\n    image: `${process.env.PUBLIC_URL}/assets/sauces/andalouse.png`,\n  },\n  {\n    name: 'BBQ',\n    slug: 'bbq',\n    image: `${process.env.PUBLIC_URL}/assets/sauces/bbq.png`,\n  },\n  {\n    name: 'Ketchup',\n    slug: 'ketchup',\n    image: `${process.env.PUBLIC_URL}/assets/sauces/ketchup.png`,\n  },\n  {\n    name: 'Curry',\n    slug: 'curry',\n    image: `${process.env.PUBLIC_URL}/assets/sauces/curry.png`,\n  },\n];\nexport default sauces","import breads, { Bread } from './breads.data';\nimport fillings, { Filling } from './fillings.data';\nimport meats, { Meat } from './meats.data';\nimport sauces, { Sauce } from './sauces.data';\n\nexport interface Kebab {\n  name?: string;\n  slug?: string;\n  price?: number;\n  image?: string;\n  bread?: Bread;\n  meat?: Meat;\n  fillings?: Filling[];\n  sauces?: Sauce[];\n};\n\nconst kebabs: Kebab[] = [\n  {\n    name: 'Le Classique',\n    slug: 'classic',\n    price: 5.50,\n    image: `${process.env.PUBLIC_URL}/assets/kebabs/kebab-classic.jpg`,\n    bread: breads.find(bread => bread.slug === 'pain')!!,\n    meat: meats.find(meat => meat.slug === 'viande')!!,\n    fillings: fillings.filter(filling => filling.slug === 'salade' || filling.slug === 'tomate' || filling.slug === 'oignon'),\n    sauces: sauces.filter(sauce => sauce.slug === 'blanche'),\n  },\n  {\n    name: 'Le Vege',\n    slug: 'vege',\n    price: 6.00,\n    image: `${process.env.PUBLIC_URL}/assets/kebabs/kebab-vege.jpg`,\n    bread: breads.find(bread => bread.slug === 'pain')!!,\n    meat: meats.find(meat => meat.slug === 'tofu')!!,\n    fillings: fillings.filter(filling => false),\n    sauces: sauces.filter(sauce => sauce.slug === 'blanche'),\n  },\n  {\n    name: 'Le BBQ',\n    slug: 'bbq',\n    price: 6.00,\n    image: `${process.env.PUBLIC_URL}/assets/kebabs/kebab-bbq.jpg`,\n    bread: breads.find(bread => bread.slug === 'pain')!!,\n    meat: meats.find(meat => meat.slug === 'viande')!!,\n    fillings: fillings.filter(filling => filling.slug === 'salade' || filling.slug === 'tomate' || filling.slug === 'oignon'),\n    sauces: sauces.filter(sauce => sauce.slug === 'bbq'),\n  },\n];\nexport default kebabs","import * as Styled from './kebab.styled';\nimport { useHistory } from \"react-router-dom\";\nimport Button from '../../components/common/button';\nimport Card from '../../components/common/card';\nimport kebabs, { Kebab as IKebab } from '../../data/kebabs.data';\nimport { ContainerWrapper } from '../../components/common/container.styled';\n\ninterface Props {\n  match?: {\n    params: {\n      name: string;\n    };\n  };\n  kebab?: IKebab;\n  onOrder: (kebab: IKebab) => void;\n}\n\nconst Kebab = (props: Props) => {\n  const history = useHistory();\n  const kebab = kebabs.find(kebab => kebab.slug === props.match?.params?.name) ?? props.kebab;\n  console.log(props)\n\n  return (\n    <ContainerWrapper>\n      <h1>On récapitule</h1>\n\n      <Styled.SummaryElementWrapper>\n\n        <Card\n          title={kebab?.bread?.name ?? ''}\n          image={kebab?.bread?.image ?? ''}\n          isSelected={false}\n          onSelect={() => { }} />\n\n        <h2>+</h2>\n\n        <Card\n          title={kebab?.meat?.name ?? ''}\n          image={kebab?.meat?.image ?? ''}\n          isSelected={false}\n          onSelect={() => { }} />\n\n        <h2>+</h2>\n\n        <Card\n          title={kebab?.fillings?.map(filling => filling.name) ?? []}\n          image={kebab?.fillings?.map(filling => filling.image) ?? []}\n          isSelected={false}\n          onSelect={() => { }} />\n\n        <h2>+</h2>\n\n        <Card\n          title={kebab?.sauces?.map(sauce => sauce.name) ?? []}\n          image={kebab?.sauces?.map(sauce => sauce.image) ?? []}\n          isSelected={false}\n          onSelect={() => { }} />\n\n      </Styled.SummaryElementWrapper>\n\n      <Button\n        name=\"Commander\"\n        onClick={() => {\n          props.onOrder(kebab!!)\n          history.push(`${process.env.PUBLIC_URL}/`)\n        }} />\n\n    </ContainerWrapper>\n  )\n}\n\nexport default Kebab\n","import styled from 'styled-components';\n\nexport const SelectorWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  gap: 2rem;\n`;\n\nexport const ElementWrapper = styled.div`\n  display: flex;\n  gap: 2rem;\n  flex-wrap: wrap;\n  justify-content: center;\n`;","import { useState } from 'react'\nimport Button from '../../../components/common/button'\nimport Card from '../../../components/common/card'\nimport breads, { Bread } from '../../../data/breads.data'\nimport * as Styled from './selector.styled';\n\ninterface Props {\n  onProceed: (bread: Bread) => void;\n}\n\nconst BreadsSelector = (props: Props) => {\n  const [selectedBread, setSelectedBread] = useState('');\n\n  return (\n    <Styled.SelectorWrapper>\n      <h1>Pain ou galette ?</h1>\n\n      <Styled.ElementWrapper>\n        {breads.map((bread, index) => (\n          <Card\n            key={index}\n            title={bread.name}\n            image={bread.image}\n            isSelected={bread.slug === selectedBread}\n            onSelect={(isSelected) => setSelectedBread(isSelected ? bread.slug : '')} />\n        ))}\n      </Styled.ElementWrapper>\n\n      <Button \n        name=\"Continuer\"\n        onClick={() => props.onProceed(breads.find(bread => bread.slug === selectedBread)!!)}/>\n\n    </Styled.SelectorWrapper>\n  )\n}\n\nexport default BreadsSelector\n","import React, { useState } from 'react'\nimport Button from '../../../components/common/button';\nimport Card from '../../../components/common/card';\nimport fillings, { Filling } from '../../../data/fillings.data'\nimport * as Styled from './selector.styled';\n\ninterface Props {\n  onProceed: (fillings: Filling[]) => void;\n}\n\nconst FillingsSelector = (props: Props) => {\n  const [selectedFillings, setSelectedFillings] = useState([] as string[]);\n\n  return (\n    <Styled.SelectorWrapper>\n      <h1>Salade, tomate, oignons ?</h1>\n\n      <Styled.ElementWrapper>\n        {fillings.map((filling, index) => (\n          <Card\n            key={index}\n            title={filling.name}\n            image={filling.image}\n            isSelected={selectedFillings.includes(filling.slug)}\n            onSelect={(isSelected) => setSelectedFillings(isSelected ? selectedFillings.concat(filling.slug) : selectedFillings.filter(f => f !== filling.slug))} />\n        ))}\n      </Styled.ElementWrapper>\n\n      <Button\n        name=\"Continuer\"\n        onClick={() => props.onProceed(fillings.filter(filling => selectedFillings.includes(filling.slug)))} />\n\n    </Styled.SelectorWrapper>\n  )\n}\n\nexport default FillingsSelector\n","import React, { useState } from 'react'\nimport Button from '../../../components/common/button';\nimport Card from '../../../components/common/card';\nimport meats, { Meat } from '../../../data/meats.data'\nimport * as Styled from './selector.styled';\n\ninterface Props {\n  onProceed: (meat: Meat) => void;\n}\n\nconst MeatsSelector = (props: Props) => {\n  const [selectedMeat, setSelectedMeat] = useState('');\n\n  return (\n    <Styled.SelectorWrapper>\n      <h1>Plutôt viande ou tofu ?</h1>\n\n      <Styled.ElementWrapper>\n        {meats.map((meat, index) => (\n          <Card\n            key={index}\n            title={meat.name}\n            image={meat.image}\n            isSelected={meat.slug === selectedMeat}\n            onSelect={(isSelected) => setSelectedMeat(isSelected ? meat.slug : '')} />\n        ))}\n      </Styled.ElementWrapper>\n\n      <Button\n        name=\"Continuer\"\n        onClick={() => props.onProceed(meats.find(meat => meat.slug === selectedMeat)!!)} />\n\n    </Styled.SelectorWrapper>\n  )\n}\n\nexport default MeatsSelector\n","import React, { useState } from 'react'\nimport Button from '../../../components/common/button';\nimport Card from '../../../components/common/card';\nimport sauces, { Sauce } from '../../../data/sauces.data'\nimport * as Styled from './selector.styled';\n\ninterface Props {\n  onProceed: (sauces: Sauce[]) => void;\n}\n\nconst SaucesSelector = (props: Props) => {\n  const [selectedSauces, setSelectedSauces] = useState([] as string[]);\n\n  return (\n    <Styled.SelectorWrapper>\n      <h1>Quelques sauces ?</h1>\n\n      <Styled.ElementWrapper>\n        {sauces.map((sauce, index) => (\n          <Card\n            key={index}\n            title={sauce.name}\n            image={sauce.image}\n            isSelected={selectedSauces.includes(sauce.slug)}\n            onSelect={(isSelected) => {\n              if (isSelected) {\n                if (selectedSauces.length < 3) {\n                  setSelectedSauces(selectedSauces.concat(sauce.slug));\n                }\n              } else {\n                setSelectedSauces(selectedSauces.filter(s => s !== sauce.slug));\n              }\n            }} />\n        ))}\n      </Styled.ElementWrapper>\n\n      <Button\n        name=\"Continuer\"\n        onClick={() => props.onProceed(sauces.filter(sauce => selectedSauces.includes(sauce.slug)))} />\n\n    </Styled.SelectorWrapper>\n  )\n}\n\nexport default SaucesSelector\n","import React, { useState } from 'react'\nimport { Route, useHistory } from \"react-router-dom\";\nimport { Kebab as IKebab } from '../../data/kebabs.data';\nimport Kebab from '../kebab/kebab';\nimport BreadsSelector from './selector/breads-selector';\nimport FillingsSelector from './selector/fillings-selector';\nimport MeatsSelector from './selector/meats-selector';\nimport SaucesSelector from './selector/sauces-selector';\n\ninterface Props {\n  match: {\n    path: string;\n    url: string;\n  }\n  onOrder: (kebab: IKebab) => void;\n}\n\nconst ConfigKebab = (props: Props) => {\n  const history = useHistory();\n  const [kebab, setKebab] = useState({\n    price: 6.00,\n  } as IKebab);\n  console.log(props)\n\n  return (\n    <>\n      <Route exact path={props.match.url} component={() => <Kebab\n        kebab={kebab}\n        onOrder={props.onOrder} />} />\n\n\n      <Route path={`${props.match.url}/breads`} component={() => <BreadsSelector\n        onProceed={(bread) => {\n          setKebab({ ...kebab, bread: bread });\n          history.push(`${props.match.url}/meats`);\n        }} />} />\n\n      <Route path={`${props.match.url}/meats`} component={() => <MeatsSelector\n        onProceed={(meat) => {\n          setKebab({ ...kebab, meat: meat });\n          history.push(`${props.match.url}/fillings`);\n        }} />} />\n\n      <Route path={`${props.match.url}/fillings`} component={() => <FillingsSelector\n        onProceed={(fillings) => {\n          setKebab({ ...kebab, fillings: fillings });\n          history.push(`${props.match.url}/sauces`);\n        }} />} />\n\n      <Route path={`${props.match.url}/sauces`} component={() => <SaucesSelector\n        onProceed={(sauces) => {\n          setKebab({ ...kebab, sauces: sauces });\n          history.push(`${props.match.url}`);\n        }} />} />\n    </>\n  )\n}\n\nexport default ConfigKebab\n","import styled from 'styled-components';\n\nexport const PopularKebabs = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-right: 350px;\n  padding: 0 2rem;\n  gap: 1.5rem;\n\n  button {\n    width: 100%;\n  }\n`;\n\nexport const Cart = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  right: 0;\n  align-items: center;\n  gap: 1rem;\n  padding: 1.5rem;\n  height: 100%;\n  background: var(--second-bg-color);\n  border-radius: 16px 0px 0px 16px;\n`;\n\nexport const CartItemList = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const CartItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 300px;\n  align-items: center;\n  gap: 1.2rem;\n`;","import React from 'react'\nimport { useHistory } from 'react-router';\nimport * as Styled from './home.styled';\nimport Button from '../../components/common/button'\nimport kebabs, { Kebab } from '../../data/kebabs.data'\nimport Card from '../../components/common/card';\n\ninterface Props {\n  cart: {\n    kebab: Kebab;\n    quantity: number;\n  }[];\n}\n\nconst Home = (props: Props) => {\n  const history = useHistory();\n\n  return (\n    <div>\n      <Styled.PopularKebabs>\n        {kebabs.map((kebab, index) => (\n          <Card\n            key={index}\n            title={kebab.name || ''}\n            image={kebab.image || ''}\n            isSelected={false}\n            onSelect={() => history.push(`${process.env.PUBLIC_URL}/kebabs/${kebab.slug}`)} />\n        ))}\n\n        <Button\n          name=\"Configurer votre kebab\"\n          onClick={() => history.push(`${process.env.PUBLIC_URL}/kebabs/config/breads`)} />\n\n      </Styled.PopularKebabs>\n\n      <Styled.Cart>\n        <h2>Total : {props.cart.reduce((acc, cur) => acc + ((cur.kebab.price ?? 0) * cur.quantity), 0)} €</h2>\n        <Button\n          name=\"Passer la commande\"\n          onClick={() => { }} />\n\n        <h2>Votre commande</h2>\n        <Styled.CartItemList>\n          {props.cart.map((item, index) => (\n            <Styled.CartItem key={index}>\n              <div>\n                {item.kebab.name && <h4>{item.kebab.name}</h4>}\n                {([] as string[])\n                  .concat(`Kebab`)\n                  .concat(item.kebab.bread?.name || [])\n                  .concat(item.kebab.meat?.name || [])\n                  .concat(item.kebab.fillings?.map(filling => filling.name).join(' & ') || [])\n                  .concat(item.kebab.sauces?.map(sauce => sauce.name).join(' & ') || [])\n                  .join(', ')}\n              </div>\n              <span>x{item.quantity}</span>\n            </Styled.CartItem>\n          ))}\n        </Styled.CartItemList>\n      </Styled.Cart>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Footer from './components/footer/footer';\nimport Header from './components/header/header';\nimport ConfigKebab from './pages/config-kebab/config-kebab';\nimport Home from './pages/home/home';\nimport Kebab from './pages/kebab/kebab';\nimport { Kebab as IKebab } from './data/kebabs.data';\n\nfunction App() {\n  const [cart, setCart] = useState([] as {\n    kebab: IKebab,\n    quantity: number,\n  }[]);\n\n  const handleOnOrder = (kebab: IKebab) => {\n    setCart(cart.concat({ kebab: kebab, quantity: 1 }))\n  }\n\n  return (\n    <main>\n      <Header />\n\n      <Router>\n        <Switch>\n          <Route path={`${process.env.PUBLIC_URL}/`} exact component={() => <Home\n            cart={cart} />} />\n          <Route path={`${process.env.PUBLIC_URL}/kebabs/config`} component={(props: any) => <ConfigKebab\n            {...props} onOrder={handleOnOrder} />} />\n          <Route path={`${process.env.PUBLIC_URL}/kebabs/:name`} component={(props: any) => <Kebab\n            {...props}  onOrder={handleOnOrder} />} />\n        </Switch>\n      </Router>\n\n      <Footer />\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}